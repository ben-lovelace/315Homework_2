---
title: "Homework_2"
author: "Ben Lovelace"
date: "BRL979"
output:
  html_document:
    toc: yes
    toc_float: yes
  pdf_document:
    toc: yes
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(fig.height=3, fig.width=4, warning=FALSE, tidy=TRUE, tidy.opts=list(width.cutoff=60))
```

```{r include=FALSE}
library(ggplot2)
library(tidyverse)
library(kableExtra)
```

------------------------------------------------------------------------

Github Repository: [https://github.com/ben-lovelace/315Homework_2](https://github.com/ben-lovelace/315Homework_2/new/main)

# **Question 1:**

```{r include=FALSE}
profs<-read.csv("profs.csv")
```

### **Part A:**

```{r echo=FALSE, message=FALSE, warning=FALSE}
ggplot(profs,aes(x=eval)) +
  geom_histogram(col="black",fill="indianred3") +
  xlab("CES") + ggtitle("Distribution of Course Evaluation Score (CES)") + theme_minimal()
```

This histogram show student's general opinions of their courses. It demonstrates that students are generally satisfied with their courses, with very few courses rated less than 3, and a vast majority falling between the 3.5-4.5 range.

### **Part B:**

```{r echo=FALSE, message=FALSE, warning=FALSE}
ggplot(profs,aes(x=eval)) +
  geom_boxplot(col="black",fill="lightskyblue") +
  facet_wrap(~native) + xlab("CES") + 
ggtitle("Distribution of CES across English native speaker status") + theme_minimal()
```

These box plots show students general opinions of their courses separated by whether the professor was a native speaker of English or not. They demonstrate that students courses taught by native English speakers generally receieved higher scores than those not.

### **Part C:**

```{r echo=FALSE, message=FALSE, warning=FALSE}
ggplot(profs,aes(x=eval)) +
  geom_histogram(col="black",fill="palegreen3") +
  facet_wrap(~gender) + xlab("CES") + 
ggtitle("Distribution of CES across instructor's gender") + theme_minimal()
```

These histograms show students general opinions of their courses separated by whether the professor identified as male or female. They demonstrate that students were more willing to give higher scores to courses taught by male professors than female professors.

### **Part D:**

```{r echo=FALSE, message=FALSE, warning=FALSE}
profs_na<-profs%>%
  filter(!is.na(beauty))
ggplot(profs_na,aes(x=beauty,y=eval)) +
  geom_point(col="black",fill="goldenrod3",pch=21,size=2) +
  xlab("Instructor's physical attractiveness") + ylab("CES") +
  ggtitle("Distribution of CES across instructor's gender") +    theme_minimal()
```

This scatterplot shows the relationship between an instructor's physical attractiveness, judged by a panel of six students, and their course evaluation scores. It demonstrates that there is a weak correlation between an instructor's physical attractiveness and their course evaluation scores.

------------------------------------------------------------------------

# **Question 2:**

```{r include=FALSE}
bikes<-read.csv("bikeshare.csv")
```

### **Part A:**

```{r echo=FALSE, message=FALSE, warning=FALSE}
bikes_by_hour = bikes %>%
  group_by(hr) %>%
  summarize(mean_rental = mean(total))

ggplot(bikes_by_hour,aes(x=hr,y=mean_rental)) +
  geom_line(col="palevioletred3") + ylab("Average Bike Rentals") + xlab("Hour") + ggtitle("Average Hourly Bike Rentals") + theme_minimal()
```

This plot shows the average number of bike rentals (x), for every hour of the day (y). This plot demonstrates that bike rentals spike during typical morning and evening rush hours - around 8-9am and 4-5pm, with the evening rush hour experiencing more rentals than the morning.

### **Part B:**

```{r echo=FALSE, message=FALSE, warning=FALSE}
bikes_by_hour = bikes %>%
  group_by(hr,workingday) %>%
  summarize(mean_rental = mean(total))

ggplot(bikes_by_hour,aes(x=hr,y=mean_rental)) +
  geom_line(col="cornflowerblue") + ylab("Average Bike Rentals") + xlab("Hour") + ggtitle("Average Hourly Bike Rentals by Workday") + facet_wrap(~workingday) + theme_minimal()
```

This plot shows the average number of bike rentals (x), for every hour of the day (y), separated by working day (right), and non-working day (left). This plot demonstrates that bike rentals spike during different times depending on whether or not the day is a workday or not a workday. Like on the previous graph, During work days, the spike follows rush hour patterns, spiking at 8-9am as well as 4-5pm. However, unlike the previous graph, the non work day pretty rapidly increases from 5am to around 12pm, and steadily decreases from 12pm to 5am.

### **Part C:**

```{r echo=FALSE, message=FALSE, warning=FALSE}
bikes_9am = bikes %>%
  group_by(hr,workingday,weathersit) %>%
  summarize(mean_rental = mean(total)) %>%
  filter(hr==9)

ggplot(bikes_9am,aes(x=weathersit,y=mean_rental)) +
  geom_col(color="black",fill="orchid3") + ylab("Average Bike Rentals") + xlab("Weather Situation") + ggtitle("Average Bike Rentals at 9AM by Workday and Weather Situation") + facet_wrap(~workingday) + theme_minimal()
```

This graph demonstrates the distribution of bike rentals (y) dependent on the weather situation (x), spread across working day (right) and non working day (left). This graph demonstrates that on non-working days the weather conditions influence bike rentals, with the first situation (Clear, Few clouds, Partly cloudy) leading to the most rentals, the second (Mist + Cloudy, Mist + Broken clouds, Mist + Few clouds, Mist) leading to less, and the third (Light Snow, Light Rain + Thunderstorm + Scattered clouds, Light Rain + Scattered clouds) leading to the least. On working days however, people had the same willingness to rent bikes on days with weather conditions 1 and 2, but less with weather condition 3.

------------------------------------------------------------------------

# **Question 3:**

```{r message=FALSE, warning=FALSE, include=FALSE}
metro<-read.csv("capmetro_UT.csv")
```

### **Part A:**

```{r echo=FALSE, message=FALSE, warning=FALSE}
metro_sep = metro %>%
  filter(month=="Sep") %>%
  group_by(hour_of_day,day_of_week,month) %>%
  summarize(mean_board = mean(boarding))
metro_oct = metro %>%
  filter(month=="Oct") %>%
  group_by(hour_of_day,day_of_week,month) %>%
  summarize(mean_board = mean(boarding))
metro_nov = metro %>%
  filter(month=="Nov") %>%
  group_by(hour_of_day,day_of_week,month) %>%
  summarize(mean_board = mean(boarding))
  
ggplot() +
  geom_line(data=metro_sep,aes(x=hour_of_day,y=mean_board,color="September")) + xlab("Hour of Day") + ylab("Mean Boarding") + ggtitle("Mean Boarding by Month, Day of Week, and Hour of Day") + facet_wrap(~day_of_week) + theme_minimal() +
  geom_line(data=metro_oct,aes(x=hour_of_day,y=mean_board,color="October")) + xlab("Hour of Day") + ylab("Mean Boarding") + ggtitle("Mean Boarding by Month, Day of Week, and Hour of Day") + facet_wrap(~day_of_week) + theme_minimal() +
  geom_line(data=metro_nov,aes(x=hour_of_day,y=mean_board,color="November")) + xlab("Hour of Day") + ylab("Mean Boarding") + ggtitle("Mean Boarding by Month, Day of Week, and Hour of Day") + facet_wrap(~day_of_week) + theme_minimal()
```

The hour of peak for each individual days changes depending on whether the day is a weekend or a weekday, however, within these two categories there is not much variation within the hour of peak for each weekday. The figure demonstrates that Saturday and Sunday do not really have distinctive peaks, remaining low throughout the entire day, while all five weekdays have a distinctive peak at around four or five. I believe that average boardings in September look lower because of Labor day, which, like a weekend, would likely have low rates of boarding, lowering the average boardings in September. Similarly to Labor day's effect on the September averages, Thanksgiving likely has a similar effect on the November averages, lowering the averages on Thursday, as Thanksgiving falls on Thursday, as well as on the surrounding days.

### **Part B:**

```{r echo=FALSE, message=FALSE, warning=FALSE}
metro_temp = metro %>%
  group_by(temperature,weekend,hour_of_day) %>%
  summarize(mean_board = mean(boarding),
            mean_temp = mean(temperature))

ggplot(metro_temp,aes(x=mean_temp,y=mean_board,color=weekend))+ geom_point(pch=20) + ylab("Metro Rides") + xlab("Temperature") + ggtitle ("Metro Rides' Correlation with Temperature across hour of day") + facet_wrap(~hour_of_day) + theme_minimal()
```

The graph does not appear to demonstrate that temperature has any noticeable effect on boarding rates. Boardings appear to remain constant in higher temperatures. They do appear to fall off some in the lower temperatures, but that is more likely due to a lack of colder days in the fall in Texas.

# **Question 4:**

```{r message=FALSE, warning=FALSE, include=FALSE}
songs<-read.csv("billboard.csv")
```

### **Part A:**

```{r echo=FALSE, message=FALSE, warning=FALSE}
topten<-filter(songs,weeks_on_chart>=64)
topten_sort <- topten %>%
  group_by(song,performer) %>%
  summarize(count=max(weeks_on_chart))
topten_sort <- arrange(topten_sort,desc(count))
kab<-kable(topten_sort)
kable_classic_2(kab)
```

The table shows the ten longest charting songs on the Billboard Top 100, the artist that performed it, and how long it lasted on the chart

### **Part B:**

```{r echo=FALSE, message=FALSE, warning=FALSE}
diversity<-filter(songs,year>=1959,year<=2020)
diversity_per_year <- diversity %>%
  group_by(year) %>%
  summarize(unique_songs=n_distinct(song))
  
ggplot(diversity_per_year,aes(x=year,y=unique_songs)) +
  geom_line(col="navy") + ylab("Unique Songs on the Chart") + xlab("Year") + ggtitle("Song Diversity on the Billboard Top 100 Charts by Year") + theme_minimal()
```

This chart shows the diversity of music on the Billboard Top 100 Chart. The graph demonstrates that in the mid 20th century as well as the late 2010s/2020 there was a large diversity in the number of unique songs on the chart. In contrast, the 1980s to the mid 2010s saw far less diversity in the songs on the chart.

### **Part C:**

```{r echo=FALSE, message=FALSE, warning=FALSE}
tenweeks<-filter(songs,weeks_on_chart>9)
tenweeks_artists <- tenweeks %>%
  group_by(performer) %>%
  summarise(num_tenweeks = n_distinct(song))
top_artists <- tenweeks_artists %>%
  filter(num_tenweeks >= 30) %>%
  arrange(num_tenweeks) %>%
  top_n(19)

ggplot(top_artists,aes(x=performer,y=num_tenweeks)) +
  geom_col(color="black",fill="darkslategrey") + ylab("Number of ten-week hits") + xlab("Artist") + ggtitle("All artists with more than 30 ten-week hits") + theme_minimal() + coord_flip()
```

This chart shows the 19 artists that have had 30 or more songs chart on the Billboard Top 100 Chart for at least ten weeks.
